package com.erp.lead.model.impl;

import com.erp.lead.model.Address;
import com.erp.lead.model.AddressModel;
import com.erp.lead.model.AddressSoap;
import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.impl.BaseModelImpl;

import java.io.Serializable;
import java.lang.reflect.Proxy;
import java.sql.Types;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;

/**
 * The base model implementation for the Address service. Represents a row in the &quot;addresses&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.erp.lead.model.AddressModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link AddressImpl}.
 * </p>
 *
 * <p>
 * Never modify or reference this class directly. All methods that expect a Address model instance should use the {@link com.erp.lead.model.Address} interface instead.
 * </p>
 *
 * @author Thangaperumal
 * @see AddressImpl
 * @see com.erp.lead.model.Address
 * @see com.erp.lead.model.AddressModel
 * @generated
 */
public class AddressModelImpl extends BaseModelImpl<Address>
    implements AddressModel {
    public static final String TABLE_NAME = "addresses";
    public static final Object[][] TABLE_COLUMNS = {
            { "id", new Integer(Types.INTEGER) },
            { "full_name", new Integer(Types.VARCHAR) },
            { "address1", new Integer(Types.VARCHAR) },
            { "address2", new Integer(Types.VARCHAR) },
            { "address3", new Integer(Types.VARCHAR) },
            { "address4", new Integer(Types.VARCHAR) },
            { "city", new Integer(Types.VARCHAR) },
            { "county", new Integer(Types.VARCHAR) },
            { "state", new Integer(Types.VARCHAR) },
            { "province", new Integer(Types.VARCHAR) },
            { "postal_code", new Integer(Types.VARCHAR) },
            { "country_code", new Integer(Types.VARCHAR) },
            { "phone_number", new Integer(Types.VARCHAR) },
            { "created_at", new Integer(Types.TIMESTAMP) },
            { "updated_at", new Integer(Types.TIMESTAMP) },
            { "page", new Integer(Types.VARCHAR) },
            { "first_name", new Integer(Types.VARCHAR) },
            { "last_name", new Integer(Types.VARCHAR) },
            { "first_name_phonetic", new Integer(Types.VARCHAR) },
            { "last_name_phonetic", new Integer(Types.VARCHAR) },
            { "zip4", new Integer(Types.VARCHAR) }
        };
    public static final String TABLE_SQL_CREATE = "create table addresses (id INTEGER not null primary key IDENTITY,full_name VARCHAR(75) null,address1 VARCHAR(75) null,address2 VARCHAR(75) null,address3 VARCHAR(75) null,address4 VARCHAR(75) null,city VARCHAR(75) null,county VARCHAR(75) null,state VARCHAR(75) null,province VARCHAR(75) null,postal_code VARCHAR(75) null,country_code VARCHAR(75) null,phone_number VARCHAR(75) null,created_at DATE null,updated_at DATE null,page VARCHAR(75) null,first_name VARCHAR(75) null,last_name VARCHAR(75) null,first_name_phonetic VARCHAR(75) null,last_name_phonetic VARCHAR(75) null,zip4 VARCHAR(75) null)";
    public static final String TABLE_SQL_DROP = "drop table addresses";
    public static final String DATA_SOURCE = "cisDS";
    public static final String SESSION_FACTORY = "cisSessionFactory";
    public static final String TX_MANAGER = "cisTransactionManager";
    public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
                "value.object.entity.cache.enabled.com.erp.lead.model.Address"),
            true);
    public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
                "value.object.finder.cache.enabled.com.erp.lead.model.Address"),
            true);
    public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
                "lock.expiration.time.com.erp.lead.model.Address"));
    private int _id;
    private String _fullName;
    private String _address1;
    private String _address2;
    private String _address3;
    private String _address4;
    private String _city;
    private String _county;
    private String _state;
    private String _province;
    private String _postalCode;
    private String _countryCode;
    private String _phoneNumber;
    private Date _createdAt;
    private Date _updatedAt;
    private String _page;
    private String _firstName;
    private String _lastName;
    private String _firstNamePhonetic;
    private String _lastNamePhonetic;
    private String _zip4;

    public AddressModelImpl() {
    }

    /**
     * Converts the soap model instance into a normal model instance.
     *
     * @param soapModel the soap model instance to convert
     * @return the normal model instance
     */
    public static Address toModel(AddressSoap soapModel) {
        Address model = new AddressImpl();

        model.setId(soapModel.getId());
        model.setFullName(soapModel.getFullName());
        model.setAddress1(soapModel.getAddress1());
        model.setAddress2(soapModel.getAddress2());
        model.setAddress3(soapModel.getAddress3());
        model.setAddress4(soapModel.getAddress4());
        model.setCity(soapModel.getCity());
        model.setCounty(soapModel.getCounty());
        model.setState(soapModel.getState());
        model.setProvince(soapModel.getProvince());
        model.setPostalCode(soapModel.getPostalCode());
        model.setCountryCode(soapModel.getCountryCode());
        model.setPhoneNumber(soapModel.getPhoneNumber());
        model.setCreatedAt(soapModel.getCreatedAt());
        model.setUpdatedAt(soapModel.getUpdatedAt());
        model.setPage(soapModel.getPage());
        model.setFirstName(soapModel.getFirstName());
        model.setLastName(soapModel.getLastName());
        model.setFirstNamePhonetic(soapModel.getFirstNamePhonetic());
        model.setLastNamePhonetic(soapModel.getLastNamePhonetic());
        model.setZip4(soapModel.getZip4());

        return model;
    }

    /**
     * Converts the soap model instances into normal model instances.
     *
     * @param soapModels the soap model instances to convert
     * @return the normal model instances
     */
    public static List<Address> toModels(AddressSoap[] soapModels) {
        List<Address> models = new ArrayList<Address>(soapModels.length);

        for (AddressSoap soapModel : soapModels) {
            models.add(toModel(soapModel));
        }

        return models;
    }

    public int getPrimaryKey() {
        return _id;
    }

    public void setPrimaryKey(int pk) {
        setId(pk);
    }

    public Serializable getPrimaryKeyObj() {
        return new Integer(_id);
    }

    public int getId() {
        return _id;
    }

    public void setId(int id) {
        _id = id;
    }

    public String getFullName() {
        if (_fullName == null) {
            return StringPool.BLANK;
        } else {
            return _fullName;
        }
    }

    public void setFullName(String fullName) {
        _fullName = fullName;
    }

    public String getAddress1() {
        if (_address1 == null) {
            return StringPool.BLANK;
        } else {
            return _address1;
        }
    }

    public void setAddress1(String address1) {
        _address1 = address1;
    }

    public String getAddress2() {
        if (_address2 == null) {
            return StringPool.BLANK;
        } else {
            return _address2;
        }
    }

    public void setAddress2(String address2) {
        _address2 = address2;
    }

    public String getAddress3() {
        if (_address3 == null) {
            return StringPool.BLANK;
        } else {
            return _address3;
        }
    }

    public void setAddress3(String address3) {
        _address3 = address3;
    }

    public String getAddress4() {
        if (_address4 == null) {
            return StringPool.BLANK;
        } else {
            return _address4;
        }
    }

    public void setAddress4(String address4) {
        _address4 = address4;
    }

    public String getCity() {
        if (_city == null) {
            return StringPool.BLANK;
        } else {
            return _city;
        }
    }

    public void setCity(String city) {
        _city = city;
    }

    public String getCounty() {
        if (_county == null) {
            return StringPool.BLANK;
        } else {
            return _county;
        }
    }

    public void setCounty(String county) {
        _county = county;
    }

    public String getState() {
        if (_state == null) {
            return StringPool.BLANK;
        } else {
            return _state;
        }
    }

    public void setState(String state) {
        _state = state;
    }

    public String getProvince() {
        if (_province == null) {
            return StringPool.BLANK;
        } else {
            return _province;
        }
    }

    public void setProvince(String province) {
        _province = province;
    }

    public String getPostalCode() {
        if (_postalCode == null) {
            return StringPool.BLANK;
        } else {
            return _postalCode;
        }
    }

    public void setPostalCode(String postalCode) {
        _postalCode = postalCode;
    }

    public String getCountryCode() {
        if (_countryCode == null) {
            return StringPool.BLANK;
        } else {
            return _countryCode;
        }
    }

    public void setCountryCode(String countryCode) {
        _countryCode = countryCode;
    }

    public String getPhoneNumber() {
        if (_phoneNumber == null) {
            return StringPool.BLANK;
        } else {
            return _phoneNumber;
        }
    }

    public void setPhoneNumber(String phoneNumber) {
        _phoneNumber = phoneNumber;
    }

    public Date getCreatedAt() {
        return _createdAt;
    }

    public void setCreatedAt(Date createdAt) {
        _createdAt = createdAt;
    }

    public Date getUpdatedAt() {
        return _updatedAt;
    }

    public void setUpdatedAt(Date updatedAt) {
        _updatedAt = updatedAt;
    }

    public String getPage() {
        if (_page == null) {
            return StringPool.BLANK;
        } else {
            return _page;
        }
    }

    public void setPage(String page) {
        _page = page;
    }

    public String getFirstName() {
        if (_firstName == null) {
            return StringPool.BLANK;
        } else {
            return _firstName;
        }
    }

    public void setFirstName(String firstName) {
        _firstName = firstName;
    }

    public String getLastName() {
        if (_lastName == null) {
            return StringPool.BLANK;
        } else {
            return _lastName;
        }
    }

    public void setLastName(String lastName) {
        _lastName = lastName;
    }

    public String getFirstNamePhonetic() {
        if (_firstNamePhonetic == null) {
            return StringPool.BLANK;
        } else {
            return _firstNamePhonetic;
        }
    }

    public void setFirstNamePhonetic(String firstNamePhonetic) {
        _firstNamePhonetic = firstNamePhonetic;
    }

    public String getLastNamePhonetic() {
        if (_lastNamePhonetic == null) {
            return StringPool.BLANK;
        } else {
            return _lastNamePhonetic;
        }
    }

    public void setLastNamePhonetic(String lastNamePhonetic) {
        _lastNamePhonetic = lastNamePhonetic;
    }

    public String getZip4() {
        if (_zip4 == null) {
            return StringPool.BLANK;
        } else {
            return _zip4;
        }
    }

    public void setZip4(String zip4) {
        _zip4 = zip4;
    }

    public Address toEscapedModel() {
        if (isEscapedModel()) {
            return (Address) this;
        } else {
            return (Address) Proxy.newProxyInstance(Address.class.getClassLoader(),
                new Class[] { Address.class }, new AutoEscapeBeanHandler(this));
        }
    }

    public Object clone() {
        AddressImpl addressImpl = new AddressImpl();

        addressImpl.setId(getId());

        addressImpl.setFullName(getFullName());

        addressImpl.setAddress1(getAddress1());

        addressImpl.setAddress2(getAddress2());

        addressImpl.setAddress3(getAddress3());

        addressImpl.setAddress4(getAddress4());

        addressImpl.setCity(getCity());

        addressImpl.setCounty(getCounty());

        addressImpl.setState(getState());

        addressImpl.setProvince(getProvince());

        addressImpl.setPostalCode(getPostalCode());

        addressImpl.setCountryCode(getCountryCode());

        addressImpl.setPhoneNumber(getPhoneNumber());

        addressImpl.setCreatedAt(getCreatedAt());

        addressImpl.setUpdatedAt(getUpdatedAt());

        addressImpl.setPage(getPage());

        addressImpl.setFirstName(getFirstName());

        addressImpl.setLastName(getLastName());

        addressImpl.setFirstNamePhonetic(getFirstNamePhonetic());

        addressImpl.setLastNamePhonetic(getLastNamePhonetic());

        addressImpl.setZip4(getZip4());

        return addressImpl;
    }

    public int compareTo(Address address) {
        int pk = address.getPrimaryKey();

        if (getPrimaryKey() < pk) {
            return -1;
        } else if (getPrimaryKey() > pk) {
            return 1;
        } else {
            return 0;
        }
    }

    public boolean equals(Object obj) {
        if (obj == null) {
            return false;
        }

        Address address = null;

        try {
            address = (Address) obj;
        } catch (ClassCastException cce) {
            return false;
        }

        int pk = address.getPrimaryKey();

        if (getPrimaryKey() == pk) {
            return true;
        } else {
            return false;
        }
    }

    public int hashCode() {
        return getPrimaryKey();
    }

    public String toString() {
        StringBundler sb = new StringBundler(43);

        sb.append("{id=");
        sb.append(getId());
        sb.append(", fullName=");
        sb.append(getFullName());
        sb.append(", address1=");
        sb.append(getAddress1());
        sb.append(", address2=");
        sb.append(getAddress2());
        sb.append(", address3=");
        sb.append(getAddress3());
        sb.append(", address4=");
        sb.append(getAddress4());
        sb.append(", city=");
        sb.append(getCity());
        sb.append(", county=");
        sb.append(getCounty());
        sb.append(", state=");
        sb.append(getState());
        sb.append(", province=");
        sb.append(getProvince());
        sb.append(", postalCode=");
        sb.append(getPostalCode());
        sb.append(", countryCode=");
        sb.append(getCountryCode());
        sb.append(", phoneNumber=");
        sb.append(getPhoneNumber());
        sb.append(", createdAt=");
        sb.append(getCreatedAt());
        sb.append(", updatedAt=");
        sb.append(getUpdatedAt());
        sb.append(", page=");
        sb.append(getPage());
        sb.append(", firstName=");
        sb.append(getFirstName());
        sb.append(", lastName=");
        sb.append(getLastName());
        sb.append(", firstNamePhonetic=");
        sb.append(getFirstNamePhonetic());
        sb.append(", lastNamePhonetic=");
        sb.append(getLastNamePhonetic());
        sb.append(", zip4=");
        sb.append(getZip4());
        sb.append("}");

        return sb.toString();
    }

    public String toXmlString() {
        StringBundler sb = new StringBundler(67);

        sb.append("<model><model-name>");
        sb.append("com.erp.lead.model.Address");
        sb.append("</model-name>");

        sb.append(
            "<column><column-name>id</column-name><column-value><![CDATA[");
        sb.append(getId());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>fullName</column-name><column-value><![CDATA[");
        sb.append(getFullName());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>address1</column-name><column-value><![CDATA[");
        sb.append(getAddress1());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>address2</column-name><column-value><![CDATA[");
        sb.append(getAddress2());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>address3</column-name><column-value><![CDATA[");
        sb.append(getAddress3());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>address4</column-name><column-value><![CDATA[");
        sb.append(getAddress4());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>city</column-name><column-value><![CDATA[");
        sb.append(getCity());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>county</column-name><column-value><![CDATA[");
        sb.append(getCounty());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>state</column-name><column-value><![CDATA[");
        sb.append(getState());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>province</column-name><column-value><![CDATA[");
        sb.append(getProvince());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>postalCode</column-name><column-value><![CDATA[");
        sb.append(getPostalCode());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>countryCode</column-name><column-value><![CDATA[");
        sb.append(getCountryCode());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>phoneNumber</column-name><column-value><![CDATA[");
        sb.append(getPhoneNumber());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>createdAt</column-name><column-value><![CDATA[");
        sb.append(getCreatedAt());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>updatedAt</column-name><column-value><![CDATA[");
        sb.append(getUpdatedAt());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>page</column-name><column-value><![CDATA[");
        sb.append(getPage());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>firstName</column-name><column-value><![CDATA[");
        sb.append(getFirstName());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>lastName</column-name><column-value><![CDATA[");
        sb.append(getLastName());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>firstNamePhonetic</column-name><column-value><![CDATA[");
        sb.append(getFirstNamePhonetic());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>lastNamePhonetic</column-name><column-value><![CDATA[");
        sb.append(getLastNamePhonetic());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>zip4</column-name><column-value><![CDATA[");
        sb.append(getZip4());
        sb.append("]]></column-value></column>");

        sb.append("</model>");

        return sb.toString();
    }
}
